English:

execute() method:

    This method can be used to execute any SQL statement, including those that modify the database
    (like insert, update, and delete) or retrieve data (like select).
    It returns a boolean value indicating whether the execution was successful or not.

executeBatch() method:

    This method can be used to execute a batch of SQL statements as a single transaction.
    It is more efficient than executing individual statements one by one, as it reduces the
    number of round-trips between the application and the database.

prepareStatement() method:

    This method can be used to create a PreparedStatement object, which can be used to execute
    parameterized SQL statements. It is useful for executing SQL statements that need to be executed
    multiple times with different parameter values.

setAutoCommit() and commit() methods:

    These methods can be used to control transactions in the database. By default, every SQL statement is
    executed in its own transaction. However, by using these methods, you can group multiple statements
    into a single transaction.

getGeneratedKeys() method:

    This method can be used to retrieve the auto-generated keys after executing an insert statement.
    It returns a ResultSet object containing the keys.

executeLargeUpdate() method:

    This method is similar to executeUpdate(), but it can handle larger updates that exceed the limits
    of the standard executeUpdate() method.

------------------------------------------------------------------------------------------------------------------------

Svenska :

execute()-metoden:

    Den här metoden kan användas för att utföra vilken SQL-sats som helst, inklusive de som
    modifierar databasen (som insert, update och delete) eller hämtar data (som select).
    Den returnerar ett booleskt värde som indikerar om utförandet var framgångsrikt eller inte.

executeBatch()-metoden:

    Den här metoden kan användas för att utföra en batch av SQL-satser som en enda transaktion.
    Det är mer effektivt än att utföra individuella satser en efter en, eftersom det minskar
    antalet rundresor mellan programmet och databasen.

prepareStatement()-metoden:

    Den här metoden kan användas för att skapa ett PreparedStatement-objekt, som kan användas
    för att utföra parameteriserade SQL-satser. Den är användbar för att utföra SQL-satser som
    behöver utföras flera gånger med olika parameter-värden.

setAutoCommit() och commit()-metoderna:

    De här metoderna kan användas för att kontrollera transaktioner i databasen. Som standard utförs
    varje SQL-sats i sin egen transaktion. Men genom att använda de här metoderna kan du gruppera
    flera satser i en enda transaktion.

getGeneratedKeys()-metoden:

    Den här metoden kan användas för att hämta de automatiskt genererade nycklarna efter att en
    insert-sats har utförts. Den returnerar ett ResultSet-objekt som innehåller nycklarna.

executeLargeUpdate()-metoden:

    Den här metoden är liknande executeUpdate(), men den kan hantera större uppdateringar som
    överskrider gränserna för den vanliga executeUpdate()-metoden.